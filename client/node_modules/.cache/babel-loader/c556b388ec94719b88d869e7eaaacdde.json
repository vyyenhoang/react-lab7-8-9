{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\comp-2068-s20-blogging-platform-master\\\\client\\\\src\\\\components\\\\blogs\\\\Edit.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Container } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Edit = function (props) {\n  const id = props.location.state.id; // found in docs for react router\n\n  const [inputs, setInputs] = useState({\n    title: '',\n    content: '',\n    status: 'DRAFT'\n  });\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    (async () => {\n      const blogResp = await Axios.get(`/api/blogs/${id}`);\n      if (blogResp.status === 200) setInputs(blogResp.data);\n    })();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const resp = await Axios.post('/api/blogs/update', inputs);\n\n      if (resp.status === 200) {\n        toast(\"The blog was updated successfully\", {\n          type: toast.TYPE.SUCCESS\n        });\n        setRedirect(true);\n      } else {\n        toast(\"There was an issue updating the blog\", {\n          type: toast.TYPE.ERROR\n        });\n      }\n    } catch (error) {\n      toast(\"There was an issue updating the blog\", {\n        type: toast.TYPE.ERROR\n      });\n    }\n  };\n\n  const handleInputChange = async event => {\n    event.persist();\n    const {\n      name,\n      value\n    } = event.target;\n    setInputs(inputs => ({ ...inputs,\n      [name]: value\n    }));\n  };\n\n  if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/blogs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Edit Blog Post\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"title\",\n    onChange: handleInputChange,\n    value: inputs.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Content:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    name: \"content\",\n    onChange: handleInputChange,\n    value: inputs.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Status:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    name: \"status\",\n    onChange: handleInputChange,\n    defaultValue: inputs.status || 'DRAFT',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"DRAFT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"draft\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PUBLISHED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"published\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Update\")))));\n};\n\nexport default Edit;","map":{"version":3,"sources":["E:/React/comp-2068-s20-blogging-platform-master/client/src/components/blogs/Edit.jsx"],"names":["React","useState","useEffect","Form","Container","Axios","Redirect","toast","Edit","props","id","location","state","inputs","setInputs","title","content","status","redirect","setRedirect","blogResp","get","data","handleSubmit","event","preventDefault","resp","post","type","TYPE","SUCCESS","ERROR","error","handleInputChange","persist","name","value","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Container } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Edit = function (props) {\n\n  const id = props.location.state.id; // found in docs for react router\n\n  const [inputs, setInputs] = useState({\n    title: '',\n    content: '',\n    status: 'DRAFT'\n  });\n\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const blogResp = await Axios.get(`/api/blogs/${id}`);\n      if (blogResp.status === 200) setInputs(blogResp.data);\n    })();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const resp = await Axios.post('/api/blogs/update', inputs);\n\n      if (resp.status === 200)  {\n        toast(\"The blog was updated successfully\", {\n          type: toast.TYPE.SUCCESS\n        });\n        setRedirect(true);\n      } else {\n        toast(\"There was an issue updating the blog\", {\n          type: toast.TYPE.ERROR\n        });\n      }\n    } catch (error) {\n      toast(\"There was an issue updating the blog\", {\n        type: toast.TYPE.ERROR\n      });\n    }\n  };\n\n  const handleInputChange = async event => {\n    event.persist();\n\n    const { name, value } = event.target;\n\n    setInputs(inputs => ({\n      ...inputs,\n      [name]: value\n    }));\n  };\n\n  if (redirect) return (<Redirect to=\"/blogs\"/>);\n\n  return (\n    <Container className=\"my-5\">\n      <header>\n        <h1>Edit Blog Post</h1>\n      </header>\n\n      <hr/>\n\n      <div>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              name=\"title\"\n              onChange={handleInputChange}\n              value={inputs.title}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Content:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              name=\"content\"\n              onChange={handleInputChange}\n              value={inputs.content}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Status:</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"status\"\n              onChange={handleInputChange}\n              defaultValue={inputs.status || 'DRAFT'}\n            >\n              <option value=\"DRAFT\">draft</option>\n              <option value=\"PUBLISHED\">published</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group>\n            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n          </Form.Group>\n        </Form>\n      </div>\n    </Container>\n  );\n\n};\n\nexport default Edit;"]},"metadata":{},"sourceType":"module"}